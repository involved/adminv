/* @group Grid Framework */
/* @
 * tinyfluidgrid.com
 */
/*
 & Columns : 12 
 & Gutter %: 20% 
 & MinWidth: 960px
 & MaxWidth: 1200px
 
.grid_1 { width: 6.6666666666667%; }
.grid_2 { width: 15%; }
.grid_3 { width: 23.333333333333%; }
.grid_4 { width: 31.666666666667%; }
.grid_5 { width: 40%; }
.grid_6 { width: 48.333333333333%; }
.grid_7 { width: 56.666666666667%; }
.grid_8 { width: 65%; }
.grid_9 { width: 73.333333333333%; }
.grid_10 { width: 81.666666666667%; }
.grid_11 { width: 90%; }
.grid_12 { width: 98.333333333333%; }

.grid_1,
.grid_2,
.grid_3,
.grid_4,
.grid_5,
.grid_6,
.grid_7,
.grid_8,
.grid_9,
.grid_10,
.grid_11,
.grid_12 {
	margin-left: 0.83333333333333%;
	margin-right: 0.83333333333333%;
	float: left;
	display: block;
}

.alpha { margin-left:0px; }
.omega { margin-right:0px; }
.cleargrid { clear: left; }

.container {
	min-width: 960px; 
	max-width: 1200px; 
	margin: auto;
}

	.grid-example h1 {
		text-align: center;
		padding: 10px;
	}

*/


/////////
// 1kb grid system
// http://heygrady.com/blog/2011/02/17/using-sass-with-the-1kb-grid-system/




// Configuration
$column-width: 80px;
$gutter-width: 20px;
$columns: 12;

// Column Widths
@mixin grid($i) {
   width: $column-width * $i + $gutter-width * ($i - 1);
}
@mixin grid-plus($i, $plus) {
   width: $column-width * $i + $gutter-width * ($i - 1) + $plus;
}
@for $i from 1 through $columns {
  .grid-#{$i} { @include grid($i); }
}

// Page, Row, Column
@mixin grid-page($i: $columns) {
  @extend .clearfix;
   width: $column-width * $i + $gutter-width * $i;
  margin: 0 auto;
}
@mixin grid-row($page: false) {
  @extend .clearfix;
  width: auto;
  
  // rows directly inside a page don't need the negative margin
  @if $page {
    margin: 0 0;
  } @else {
    margin: 0 (-$gutter-width / 2);
    }
}
@mixin grid-column($i: false) {
  margin: 0 ($gutter-width / 2);
  float: left;
  .ie6 & { display: inline; }
  
  @if $i {
    @include grid($i);
  }
}
@mixin grid-column-empty($i: 1, $position: after) {
  $margin: $column-width * $i + $gutter-width * $i + ($gutter-width / 2);
  
  @if $position == after {
    margin-right: $margin;
  } @else {
    margin-left: $margin;
  }
}

.page {
  @include grid-page;
}
.row {
  @include grid-row;
}
.page > .row {
  margin: 0;
} 
.column {
  @include grid-column;
}

// Box
.box {
  margin-bottom: $gutter-width;
}